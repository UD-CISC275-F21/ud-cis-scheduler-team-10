{"version":3,"sources":["components/ClearSemester.tsx","components/InlineEdit.tsx","components/SemesterTable.tsx","components/SemesterTab.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ClearSemester","Button","variant","useKeyPress","targetKey","useState","keyPressed","setKeyPressed","downHandler","key","upHandler","useEffect","window","addEventListener","removeEventListener","InlineEdit","ref","handler","text","onSetText","isInputActive","setIsInputActive","inputValue","setInputValue","wrapperRef","useRef","textRef","inputRef","enter","esc","listener","event","el","current","contains","target","document","focus","className","onClick","style","width","Math","ceil","length","value","onChange","e","SemesterTable","storedCourseNumber1","setStoredCourseNumber1","storedCourseCredit1","setStoredCourseCredit1","storedCourseName1","setStoredCourseName1","storedCourseDes1","setStoredCourseDes1","storedCourseNumber2","setStoredCourseNumber2","storedCourseCredit2","setStoredCourseCredit2","storedCourseName2","setStoredCourseName2","storedCourseDes2","setStoredCourseDes2","storedCourseNumber3","setStoredCourseNumber3","storedCourseCredit3","setStoredCourseCredit3","storedCourseName3","setStoredCourseName3","storedCourseDes3","setStoredCourseDes3","storedCourseNumber4","setStoredCourseNumber4","storedCourseCredit4","setStoredCourseCredit4","storedCourseName4","setStoredCourseName4","storedCourseDes4","setStoredCourseDes4","Table","striped","bordered","hover","SemesterTab","Tabs","defaultActiveKey","id","Tab","eventKey","title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.924c4942.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport function ClearSemester(): JSX.Element{\n    return(\n        <Button variant = \"danger\">Clear Courses</Button>\n    );\n}","// Source: https://dev.to/joelmturner/build-an-inline-edit-text-input-with-react-hooks-4nah\n// Creates an inline text editing funcitonal component\n\nimport React, { useState, useEffect, useRef, RefObject } from \"react\";\nimport \"./InlineEdit.css\";\n\n\n// Source: https://usehooks.com/useKeyPress/\n// Creates a hook that can handle key presses\nfunction useKeyPress(targetKey: string): boolean {\n    // State for keeping track of whether key is pressed\n    const [keyPressed, setKeyPressed] = useState(false);\n    // If pressed key is our target key then set to true\n    function downHandler({ key }: {key: string}): void {\n        if (key === targetKey) {\n            setKeyPressed(true);\n        }\n    }\n    // If released key is our target key then set to false\n    const upHandler = ({ key }: {key: string}): void => {\n        if (key === targetKey) {\n            setKeyPressed(false);\n        }\n    };\n    // Add event listeners\n    useEffect(() => {\n        window.addEventListener(\"keydown\", downHandler);\n        window.addEventListener(\"keyup\", upHandler);\n        // Remove event listeners on cleanup\n        return () => {\n            window.removeEventListener(\"keydown\", downHandler);\n            window.removeEventListener(\"keyup\", upHandler);\n        };\n    }, []); // Empty array ensures that effect is only run on mount and unmount\n    return keyPressed;\n}\n\n// Source: https://usehooks-typescript.com/react-hook/use-on-click-outside\n// Creates a hook that handles clicking outside of the editable text area\ntype AnyEvent = MouseEvent | TouchEvent\n\nfunction useOnClickOutside<T extends HTMLElement = HTMLElement>(\n    ref: RefObject<T>,\n    handler: (event: AnyEvent) => void,): void {\n    useEffect(() => {\n        const listener = (event: AnyEvent) => {\n            const el = ref?.current;\n\n            // Do nothing if clicking ref's element or descendent elements\n            if (!el || el.contains(event.target as Node)) {\n                return;\n            }\n\n            handler(event);\n        };\n\n        document.addEventListener(\"mousedown\", listener);\n        document.addEventListener(\"touchstart\", listener);\n\n        return () => {\n            document.removeEventListener(\"mousedown\", listener);\n            document.removeEventListener(\"touchstart\", listener);\n        };\n\n        // Reload only if ref or handler changes\n    }, [ref, handler]);\n}\n\n// Source: https://dev.to/joelmturner/build-an-inline-edit-text-input-with-react-hooks-4nah\n// Returns a functional component that allows text to be edited inline\nfunction InlineEdit({text, onSetText}: {text: string, onSetText: (t: string) => void}): JSX.Element {\n    const [isInputActive, setIsInputActive] = useState(false);\n    const [inputValue, setInputValue] = useState(text);\n\n    const wrapperRef = useRef(null);\n    const textRef = useRef(null);\n    const inputRef  = useRef<HTMLInputElement>(null);\n\n    const enter = useKeyPress(\"Enter\");\n    const esc = useKeyPress(\"Escape\");\n\n    // check to see if the user clicked outside of this component\n    useOnClickOutside(wrapperRef, () => {\n        if (isInputActive) {\n            onSetText(inputValue);\n            setIsInputActive(false);\n        }\n    });\n\n    // focus the cursor in the input field on edit start\n    useEffect(() => {\n        if (isInputActive) {\n            inputRef?.current?.focus();\n        }\n    }, [isInputActive]);\n\n    useEffect(() => {\n        if (isInputActive) {\n        // if Enter is pressed, save the text and case the editor\n            if (enter) {\n                onSetText(inputValue);\n                setIsInputActive(false);\n            }\n            // if Escape is pressed, revert the text and close the editor\n            if (esc) {\n                setInputValue(text);\n                setIsInputActive(false);\n            }\n        }\n    }, [enter, esc]); // watch the Enter and Escape key presses\n\n    return (\n        <span className=\"inline-text\" ref={wrapperRef}>\n            <span\n                ref={textRef}\n                onClick={() => setIsInputActive(true)}\n                className={`inline-text_copy inline-text_copy--${\n                    !isInputActive ? \"active\" : \"hidden\"\n                }`}\n            >\n                {text}\n            </span>\n            <input\n                ref={inputRef}\n                // set the width to the input length multiplied by the x height\n                // it's not quite right but gets it close\n                style={{ width: Math.ceil(inputValue.length * 0.9) + \"ex\" }}\n                value={inputValue}\n                onChange={e => {\n                    setInputValue(e.target.value);\n                }}\n                className={`inline-text_input inline-text_input--${\n                    isInputActive ? \"active\" : \"hidden\"\n                }`}\n            />\n        </span>\n    );\n}\n\nexport default InlineEdit;","import React, { useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport InlineEdit from \"./InlineEdit\";\n\n\nexport function SemesterTable (): JSX.Element{\n\n    const [storedCourseNumber1, setStoredCourseNumber1] = useState(\"CISC108\");\n    const [storedCourseCredit1, setStoredCourseCredit1] = useState(\"3\");\n    const [storedCourseName1, setStoredCourseName1] = useState(\"Introduction to Programming\");\n    const [storedCourseDes1, setStoredCourseDes1] = useState(\n        `Computing and principles of programming with an emphasis on systematic program design. Topics include functional programming, data abstraction, procedural abstraction, \n        use of control and state, recursion, testing, and object-oriented programming concepts. Requires no prior programming experience, open to any major, \n        but intended primarily for majors and minors in computer science or mathematics.`);\n\n    const [storedCourseNumber2, setStoredCourseNumber2] = useState(\"MATH241\");\n    const [storedCourseCredit2, setStoredCourseCredit2] = useState(\"4\");\n    const [storedCourseName2, setStoredCourseName2] = useState(\"Analytic Geometry and Calculus A\");\n    const [storedCourseDes2, setStoredCourseDes2] = useState(\n        `Functions, limits, continuity, derivatives. Polynomial, rational, exponential, hyperbolic, logarithmic, trigonometric and inverse trigonometric functions. \n        Definite and indefinite integrals and the Fundamental Theorem of Calculus. Simple differential equations (separable ODE, linear ODE). ODE models leading to exponential growth and decay.`);\n    \n    const [storedCourseNumber3, setStoredCourseNumber3] = useState(\"EGGG101\");\n    const [storedCourseCredit3, setStoredCourseCredit3] = useState(\"2\");\n    const [storedCourseName3, setStoredCourseName3] = useState(\"Introduction to Engineering\");\n    const [storedCourseDes3, setStoredCourseDes3] = useState(\n        `Introduction to profession, including disciplines of chemical, civil, computer, electrical, environmental, and mechanical engineering. \n        Prepares students for success through integration of: technical problem solving and engineering design, ethical decision-making, teamwork, and communicating to diverse audiences.`);\n\n    const [storedCourseNumber4, setStoredCourseNumber4] = useState(\"ENGL110\");\n    const [storedCourseCredit4, setStoredCourseCredit4] = useState(\"3\");\n    const [storedCourseName4, setStoredCourseName4] = useState(\"Seminar and Composition\");\n    const [storedCourseDes4, setStoredCourseDes4] = useState(\"Introduction to the process of academic writing that centers on the composition of analytical, research-based essays.\");\n\n    return(\n        <Table striped \n            bordered \n            hover\n            variant=\"dark\">\n            <thead>\n                <tr>\n                    <th>Course Number</th>\n                    <th>Course Name</th>\n                    <th>Credits</th>\n                    <th>Description</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td><InlineEdit text={storedCourseNumber1} onSetText={text => setStoredCourseNumber1(text)}/></td>\n                    <td><InlineEdit text={storedCourseName1} onSetText={text => setStoredCourseName1(text)}/></td>\n                    <td><InlineEdit text={storedCourseCredit1} onSetText={text => setStoredCourseCredit1(text)}/></td>\n                    <td><InlineEdit text={storedCourseDes1} onSetText={text => setStoredCourseDes1(text)}/></td>\n                </tr>\n                <tr>\n                    <td><InlineEdit text={storedCourseNumber2} onSetText={text => setStoredCourseNumber2(text)}/></td>\n                    <td><InlineEdit text={storedCourseName2} onSetText={text => setStoredCourseName2(text)}/></td>\n                    <td><InlineEdit text={storedCourseCredit2} onSetText={text => setStoredCourseCredit2(text)}/></td>\n                    <td><InlineEdit text={storedCourseDes2} onSetText={text => setStoredCourseDes2(text)}/></td>\n                </tr>\n                <tr>\n                    <td><InlineEdit text={storedCourseNumber3} onSetText={text => setStoredCourseNumber3(text)}/></td>\n                    <td><InlineEdit text={storedCourseName3} onSetText={text => setStoredCourseName3(text)}/></td>\n                    <td><InlineEdit text={storedCourseCredit3} onSetText={text => setStoredCourseCredit3(text)}/></td>\n                    <td><InlineEdit text={storedCourseDes3} onSetText={text => setStoredCourseDes3(text)}/></td>\n                </tr>\n                <tr>\n                    <td><InlineEdit text={storedCourseNumber4} onSetText={text => setStoredCourseNumber4(text)}/></td>\n                    <td><InlineEdit text={storedCourseName4} onSetText={text => setStoredCourseName4(text)}/></td>\n                    <td><InlineEdit text={storedCourseCredit4} onSetText={text => setStoredCourseCredit4(text)}/></td>\n                    <td><InlineEdit text={storedCourseDes4} onSetText={text => setStoredCourseDes4(text)}/></td>\n                </tr>\n            </tbody>\n        </Table>\n    );\n}","import React from \"react\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport { ClearSemester } from \"./ClearSemester\";\nimport { SemesterTable } from \"./SemesterTable\";\n\n\nexport function SemesterTab(): JSX.Element {\n    return (\n        <Tabs defaultActiveKey=\"semester_1\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n            <Tab eventKey=\"semester_1\" title=\"Semester 1\" >\n                <SemesterTable></SemesterTable>\n                <ClearSemester></ClearSemester>\n            </Tab>\n            <Tab eventKey=\"semester_2\" title=\"Semester 2\">\n                <SemesterTable></SemesterTable>\n                <ClearSemester></ClearSemester>\n            </Tab>\n            <Tab eventKey=\"semester_3\" title=\"Semester 3\">\n                <SemesterTable></SemesterTable>\n                <ClearSemester></ClearSemester>\n            </Tab>\n        </Tabs>\n    );\n}","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { SemesterTab } from \"./components/SemesterTab\";\n\n\nfunction App(): JSX.Element {\n    return (\n        <div className=\"App\">\n\n            <h1>UD CIS Scheduler</h1>\n            <SemesterTab></SemesterTab>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}