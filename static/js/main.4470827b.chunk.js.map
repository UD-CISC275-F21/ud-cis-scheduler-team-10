{"version":3,"sources":["components/EditCourseModal.tsx","components/CourseRow.tsx","components/AddSemesterModal.tsx","components/SemesterTab.tsx","components/CourseList.tsx","components/WelcomeModal.tsx","components/DegreeRequirements.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EditCourseModal","visible","setVisible","editCourse","course","semesterTitle","useState","Number","courseNumber","setCourseNumber","Credits","courseCredits","setCourseCredits","Name","courseName","setCourseName","Description","courseDescription","setCourseDescription","Prereq","coursePrereq","setCoursePrereq","hide","Modal","show","onHide","Header","closeButton","Title","Body","Form","Group","className","controlId","Label","Control","as","rows","value","onChange","ev","target","Footer","Button","variant","onClick","CourseRow","removeCourse","Table","striped","bordered","hover","AddSemesterModal","addSemester","semsterTitle","setSemesterTitle","newCourse","Courses","LOCAL_STORAGE_COURSES","SemesterTab","loadCourses","semester1","semester2","semester3","semester4","semester5","semester6","semester7","semester8","rawCourses","localStorage","getItem","JSON","parse","getLocalStorageCourses","length","semesterCount","setSemesterCount","semesterNumber","setSemesterNumber","semesters","setSemesters","oldCourse","title","i","newArr","cloneDeep","j","newSemester","save","setItem","stringify","removeAllSemesters","Tabs","defaultActiveKey","id","map","semester","Tab","eventKey","c","filter","includes","removeSemester","t","newSemesterArr","newCourseArr","courseRow","removeCourseRow","handleAddRow","handleClearAll","data","CourseList","WelcomeModal","setShow","handleClose","DegreeRequirementsModal","Container","Row","Col","courseArray","CourseData","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4470827b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport { Course } from \"../interfaces/Course\";\n\nexport function EditCourseModal({visible, setVisible, editCourse, course, semesterTitle}:\n    {visible: boolean, setVisible: (b: boolean) => void,\n    editCourse: (oldc: Course, newc: Course, t: string) => void, course: Course, semesterTitle: string}): JSX.Element {\n    const [courseNumber, setCourseNumber] = useState(course.Number);\n    const [courseCredits, setCourseCredits] = useState(course.Credits);\n    const [courseName, setCourseName] = useState(course.Name);\n    const [courseDescription, setCourseDescription] = useState(course.Description);\n    const [coursePrereq, setCoursePrereq] = useState(course.Prereq);\n\n    function saveCourse() {\n        const newCourse = {\n            Number: courseNumber,\n            Credits: courseCredits,\n            Name: courseName,\n            Description: courseDescription,\n            Prereq: coursePrereq\n        };\n        editCourse(course, newCourse, semesterTitle);\n        setVisible(false);\n    }\n\n    const hide = () => setVisible(false);\n    return (\n        <Modal show={visible} onHide={hide}>\n            <Modal.Header closeButton>\n                <Modal.Title>Edit Course</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                <Form>\n                    <Form.Group className=\"mb-3\" controlId=\"editCourseForm.courseNumberArea\">\n                        <Form.Label >Course Number</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3} data-testid = \"modal_course_number_textbox\"\n                            value={courseNumber}\n                            onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setCourseNumber(ev.target.value)}/>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"editCourseForm.courseCreditsArea\">\n                        <Form.Label>Credits</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3} data-testid = \"modal_course_credits_textbox\"\n                            value={courseCredits}\n                            onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setCourseCredits(ev.target.value)}/>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"editCourseForm.courseNameArea\">\n                        <Form.Label>Course Name</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3} data-testid = \"modal_course_name_textbox\"\n                            value={courseName}\n                            onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setCourseName(ev.target.value)}/>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"editCourseForm.courseDescriptionArea\">\n                        <Form.Label>Course Description</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3} data-testid = \"modal_course_description_textbox\"\n                            value={courseDescription}\n                            onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setCourseDescription(ev.target.value)}/>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"editCourseForm.coursePrereqArea\">\n                        <Form.Label>Prerequisites</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3} data-testid = \"modal_course_Prereq_textbox\"\n                            value={coursePrereq}\n                            onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setCoursePrereq(ev.target.value)}/>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button data-testid=\"close-button\" variant=\"secondary\" onClick={hide}>Close</Button>\n                <Button data-testid=\"save-changes-button\" variant=\"primary\" onClick={saveCourse}>Save changes</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}","import React, {useState} from \"react\";\nimport {Button} from \"react-bootstrap\";\nimport { Course } from \"../interfaces/Course\";\nimport { EditCourseModal } from \"./EditCourseModal\";\nimport { Table } from \"react-bootstrap\";\n\n\nexport function CourseRow({course, semesterTitle, removeCourse, editCourse}: {course:Course, semesterTitle: string, removeCourse: (c: string) => void, editCourse: (oldc: Course, newc: Course, t: string) => void}): JSX.Element{\n    const [visible, setVisible] = useState(false);\n\n    return(\n        <div>\n            <Table striped bordered hover variant=\"dark\">\n                <thead>\n                    <tr>\n                        <th>Course Number</th>\n                        <th>Credits</th>\n                        <th>Course Name</th>\n                        <th>Description</th>\n                        <th>Prerequisites</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>{course.Number}</td>\n                        <td>{course.Credits}</td>\n                        <td>{course.Name}</td>\n                        <td>{course.Description}</td>\n                        <td>{course.Prereq}</td>\n                        <td><Button variant='success' onClick = {() => setVisible(true)}>Edit Course</Button></td>\n                        <td><Button variant = 'danger' onClick = {() => removeCourse(course.Number)}>Clear Course</Button></td>\n                    </tr>\n                    <EditCourseModal visible={visible} setVisible={setVisible} editCourse={ editCourse}  course={course} semesterTitle = {semesterTitle}></EditCourseModal>\n                </tbody>\n            </Table>\n        </div>\n    );\n\n}","import React, { useState } from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport { Course } from \"../interfaces/Course\";\nimport { Semester } from \"../interfaces/Semester\";\n\nexport function AddSemesterModal({visible, setVisible, addSemester}:{visible: boolean, setVisible: (b: boolean) => void, addSemester:(s: Semester) => void}):JSX.Element{\n    \n    const [semsterTitle, setSemesterTitle] = useState<string>(\"Set Title\");\n\n    const newCourse = {} as Course;\n    newCourse.Number = \"--\";\n    newCourse.Credits = \"--\";\n    newCourse.Name = \"--\";\n    newCourse.Description = \"--\";\n\n    function saveSemester(){\n        addSemester({\n            Title: semsterTitle,\n            Courses: [newCourse, newCourse, newCourse]\n        });\n        setVisible(false);\n    }\n\n    const hide = () => setVisible(false);\n    return (\n        <Modal show={visible} onHide={hide}>\n            <Modal.Header closeButton>\n                <Modal.Title>Add Semester</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                <Form>\n                    <Form.Group className=\"mb-3\" controlId=\"editCourseForm.semesterTitleArea\">\n                        <Form.Label >Semester Title</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3} data-testid = \"modal_add_semester_textbox\"\n                            value={semsterTitle}\n                            onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setSemesterTitle(ev.target.value)}/>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button data-testid=\"close-Semester-button\" variant=\"secondary\" onClick={hide}>Close</Button>\n                <Button data-testid=\"save-Semester-button\" variant=\"primary\" onClick={saveSemester}>Save changes</Button>\n            </Modal.Footer>\n\n        </Modal>\n    );\n}\n","import React, { useState } from \"react\";\nimport { Button, Tab, Table, Tabs } from \"react-bootstrap\";\nimport { Course } from \"../interfaces/Course\";\nimport { Semester } from \"../interfaces/Semester\";\nimport { CourseRow } from \"./CourseRow\";\nimport { CSVLink } from \"react-csv\";\nimport {cloneDeep} from \"lodash\";\nimport { AddSemesterModal } from \"./AddSemesterModal\";\n\n\n\n//const courseArray = JSON.parse(JSON.stringify(CourseData));\n\nexport const LOCAL_STORAGE_COURSES = \"scheduler-courses\";\n\nexport function getLocalStorageCourses({semester1, semester2, semester3, semester4, semester5, semester6, semester7, semester8}: {semester1: Semester, semester2: Semester, semester3: Semester, semester4: Semester, semester5: Semester, semester6: Semester, semester7: Semester, semester8: Semester}): Semester[]{\n    const rawCourses: string | null = localStorage.getItem(LOCAL_STORAGE_COURSES);\n    if (rawCourses == null) {\n        return[semester1,semester2,semester3,semester4, semester5, semester6, semester7, semester8];\n    }else {\n        return JSON.parse(rawCourses);\n    }\n}\n\nexport function SemesterTab({semester1, semester2, semester3, semester4, semester5, semester6, semester7, semester8}: {semester1: Semester, semester2: Semester, semester3: Semester, semester4: Semester, semester5: Semester, semester6: Semester, semester7: Semester, semester8: Semester}): JSX.Element {\n    const loadCourses = getLocalStorageCourses({semester1, semester2, semester3, semester4, semester5, semester6, semester7, semester8});\n    const [semesterCount, setSemesterCount] = useState(loadCourses.length);\n    const [semesterNumber, setSemesterNumber] = useState(loadCourses.length + 1);\n    const [semesters, setSemesters] = useState(loadCourses);\n    const [visible, setVisible] = useState(false);\n\n    function editCourse(oldCourse: Course, newCourse: Course, title: string) {\n        for (let i = 0; i < semesters.length; i++) {\n            if (semesters[i].Title === title) {\n                const newArr = cloneDeep(semesters);\n                for (let j = 0; j<newArr[i].Courses.length; j++) {\n                    if (newArr[i].Courses[j].Number === oldCourse.Number) {\n                        newArr[i].Courses[j] = newCourse;\n                        setSemesters(newArr);\n                    }\n                }    \n            }\n        }\n    }\n\n    function addSemester(newSemester: Semester){\n        setSemesters([...semesters, newSemester]);\n    }\n\n    function showAddSemesterModal(){\n        setVisible(true);\n    }\n    \n\n    function save(){\n        localStorage.setItem(LOCAL_STORAGE_COURSES, JSON.stringify(semesters));\n    }\n\n    /*  const handleAddSemester = () => {\n        setSemesterCount(semesterCount + 1);\n        setSemesterNumber(semesterNumber + 1);\n        const semesterTitle = \"Semester \" + semesterNumber as string; */\n\n    /*  const newCourse = {} as Course;\n        newCourse.Number = \"--\";\n        newCourse.Credits = \"--\";\n        newCourse.Name = \"--\";\n        newCourse.Description = \"--\";\n */\n    /*  const newSemester = {} as Semester;\n        newSemester.Title = semesterTitle;\n        newSemester.Courses = [newCourse, newCourse, newCourse];\n        setSemesters([...semesters,newSemester]);\n    }; */\n\n    const removeSemester = (c: string) => {\n        setSemesterCount(semesterCount-1);\n        setSemesterNumber(semesterNumber-1);\n        const newArr = semesters.filter(semester => !semester.Title.includes(c));\n        setSemesters([...newArr]);\n    };\n\n    const removeAllSemesters = () =>{\n        setSemesters([]);\n        setSemesterNumber(1);\n        setSemesterCount(0);\n    };\n\n\n    const handleAddRow = (t: string) => {\n        const newCourse = {} as Course;\n        newCourse.Number = \"--\";\n        newCourse.Credits = \"--\";\n        newCourse.Name = \"--\";\n        newCourse.Description = \"--\";\n        for (let i = 0; i < semesters.length; i++) {\n            if (semesters[i].Title === t) {\n                const newArr = [...semesters];\n                newArr[i].Courses = [...newArr[i].Courses, newCourse];\n                setSemesters([...newArr]);\n            }\n        }\n    };\n\n    const handleClearAll = (t: string) =>{\n        for (let i = 0; i < semesters.length; i++) {\n            if (semesters[i].Title === t) {\n                const newArr = [...semesters];\n                newArr[i].Courses = [];\n                setSemesters([...newArr]);\n            }\n        }\n    };\n    \n    const removeCourseRow = (t:string, c: string) => {\n        for (let i = 0; i < semesters.length; i++) {\n            if (semesters[i].Title === t) {\n                const newSemesterArr = [...semesters];\n                const newCourseArr = newSemesterArr[i].Courses.filter(courseRow => !courseRow.Number.includes(c));\n                newSemesterArr[i].Courses = [...newCourseArr];\n                setSemesters(newSemesterArr);\n            }\n        }\n    };\n\n\n    if(semesterCount !== 0){\n        return (\n            <div>\n                <Tabs defaultActiveKey={semesters[0].Title} id=\"Semester_tabs\" className=\"mb-3\">\n                    {semesters.map(semester => {\n                        return(\n                            <Tab key = {semester.Title} eventKey={semester.Title} title={[semester.Title, \" \", <Button key={semester.Title} variant = 'danger' onClick = {() => removeSemester(semester.Title)}>X</Button>]}>\n                                <Table striped bordered hover variant=\"dark\">\n                                    <tbody>\n                                        {semester.Courses.map((course: Course) => {\n                                            return(\n                                                <div key = {course.Number}>\n                                                    <CourseRow  course = {course} removeCourse = {() => removeCourseRow(semester.Title, course.Number) } editCourse={editCourse} semesterTitle={semester.Title}></CourseRow>\n                                                </div>\n                                            );\n                                        })}\n                                    </tbody>\n                                    <div>\n                                        <p></p>\n                                    </div>\n                                    <Button variant = 'success' onClick = {() => handleAddRow(semester.Title)}>Add Course</Button>\n                                </Table>\n                                <Button variant = 'danger' onClick = {() => handleClearAll(semester.Title)}>Remove All Courses</Button>\n                                <div> \n                                    <p></p>\n                                </div>\n                            </Tab>\n                        );\n                    })}\n                    <Tab eventKey=\"add_semester_tab\" title={<Button variant = 'success' onClick = {showAddSemesterModal}>+Add Semester+</Button>}></Tab>\n                </Tabs>\n                <Button variant = 'danger' onClick = {removeAllSemesters}>-Remove all Semesters-</Button>\n                <div>\n                    <p></p>\n                </div>\n                <Button variant = 'success' onClick = {save}>Save Courses</Button>\n                <div>\n                    <p></p>\n                </div>\n                <div>\n                    <Button variant = 'info'>\n                        <CSVLink data = {JSON.stringify(semesters,null,2)}>Download to CSV!</CSVLink>\n                    </Button>\n                    <AddSemesterModal visible={visible} setVisible={setVisible} addSemester={addSemester}></AddSemesterModal>\n                    <div>\n                        <p></p>\n                    </div>\n                </div>\n                \n            </div> \n        );\n    } else{\n        return(\n            <div>\n                <Tabs id=\"Semester_tabs\" className=\"mb-3\">\n                    <Tab eventKey=\"add_semester_tab\" title={<Button variant = 'success' onClick = {() => setVisible(true)}>+Add Semester+</Button>}></Tab>\n\n                </Tabs>\n                <Button variant = 'danger' onClick = {removeAllSemesters}>-Remove all Semesters-</Button>\n                <div>\n                    <p></p>\n                </div>\n                <Button variant = 'success' onClick = {save}>Save Courses</Button>\n                <AddSemesterModal visible={visible} setVisible={setVisible} addSemester={addSemester}></AddSemesterModal>\n            </div>\n        );\n    }\n} \n\n","import Courses from \"../data/courses.json\";\nimport { Table } from \"react-bootstrap\";\nimport React from \"react\";\nimport \"./CourseList.css\";\n\nexport function CourseList (): JSX.Element {\n    return (\n        <div className=\"course-table-div\" >\n            <Table striped \n                bordered \n                hover\n                variant=\"dark\"\n                className=\"course-table\">\n                <thead className=\"course-table-head\">\n                    <tr>\n                        <th className=\"course-number\">Course Number</th>\n                        <th className=\"course-name\">Course Name</th>\n                        <th className=\"course-credits\">Credits</th>\n                        <th className=\"course-description\">Description</th>\n                        <th className =\"course-prereq\">Prerequisites</th>\n                    </tr>\n                </thead>\n                <tbody className=\"course-table-body\">\n                    { Courses.map(course => {\n                        return(\n                            <tr key={course.Number}>\n                                <td>{ course.Number }</td>\n                                <td>{ course.Name }</td>\n                                <td className=\"credits\">{ course.Credits }</td>\n                                <td>{ course.Description }</td>\n                                <td>{ course.Prereq }</td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </Table>\n\n\n        </div>\n    );\n}","import {Modal,Button} from \"react-bootstrap\";\nimport React, {useState} from \"react\";\n\nexport function WelcomeModal(): JSX.Element{\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    \n    return(\n        <><Button variant=\"info\" onClick={handleShow}>\n            Need help?\n        </Button><Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>About UD CIS Scheduler</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Welcome! This site should be a nifty resource for students, advisors, and teachers to set up a course schedule.<p></p> You can make multiplie\n                        schedules for future semesters if you wish by using the tabs at the top, or you can just stick to one semester.\n                        You can get started by taking a look at the course list down below, and clicking on the &quot;Edit Course&quot; in the scheduler to edit it to your liking.\n                        You can also add courses using the green &quot;Add Course button&quot;, clear specific courses using the &quot;Clear Course&quot; button, or \n                        clear an entire semester using the &quot;Remove all Courses&quot; button. <p></p>\n                        You can also add and remove specific semesters using the &quot;Add Semester&quot; and the red X respectively, as well as remove\n                        all semesters, save your progress in your browser, or download the courselist to a CSV file using the respective buttons below.\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n            </Modal.Footer>\n        </Modal></>\n    );\n}","import {Modal,Button, Row, Container, Col} from \"react-bootstrap\";\nimport React, {useState} from \"react\";\n\nexport function DegreeRequirementsModal(): JSX.Element{\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    \n    return(\n        <><Button variant=\"info\" onClick={handleShow}>\n            Degree Requirements\n        </Button><Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Courses Needed To Graduate</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Container>\n                    <Row>\n                        <Col>\n                            Core Requirements:<br />\n                            CISC 108 - Introduction to Computer Science I<br />\n                            CISC 181 - Introduction to Computer Science II<br />\n                            CISC 210 - Introduction to Systems Programming<br />\n                            CISC 220 - Data Structures<br />\n                            CISC 260 - Machine Organization and Assembly Language<br />\n                            CISC 275 - Introduction to Software Engineering<br />\n                            CISC 303 - Automata Theory<br />\n                            CISC 361 - Operating Systems<br />\n                            CISC 372 - Parallel Computing<br />\n                            Six additional credits of computer science technical electives numbered 301 or above, except for CISC 355, CISC 356, CISC 357, CISC 465, CISC 366 and CISC 466<br />\n                            Twelve credits in advanced courses in a focus area.<br />\n                            MATH 205 - Statistical Methods OR MATH 350 - Probability Theory and Simulation Methods<br />\n                            MATH 210 - Discrete Mathematics I<br />\n                            MATH 241 - Analytic Geometry and Calculus A<br />\n                            MATH 242 - Analytic Geometry and Calculus B<br />\n                            <br />\n                            Capstone Requirement:<br />\n                            CISC 498 - Computer Science Senior Design Project I<br />\n                            CISC 499 - Computer Science Senior Design Project II<br />\n                            UNIV 401 - Senior Thesis<br />\n                            UNIV 402 - Senior Thesis<br />\n                            <br />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            Science Requirements:<br />\n                            Twelve credits in science courses including one of the following eight credit laboratory science sequences:<br />\n                            Option I:<br />\n                            PHYS 207 - Fundamentals of Physics I <br />\n                            PHYS 227 - Fundamentals of Physics Laboratory I<br />\n                            PHYS 208 - Fundamentals of Physics II<br />\n                            PHYS 228 - Fundamentials of Physics Laboratory II <br />\n                            Option II:<br />\n                            CHEM 103 - General Chemistry <br />\n                            CHEM 133 - General Chemistry Laboratory<br />\n                            CHEM 104 - General Chemistry <br />\n                            CHEM 134 - General Chemistry Laboratory<br />\n                            Option III:<br />\n                            BISC 207 - Introductory Biology I<br />\n                            BISC 208 - Introductory Biology II<br />\n                            Option IV:<br />\n                            GEOL 107 - Geology of Dynamic Earth<br />\n                            GEOL 110 - Earth’s Evolving Systems<br />\n                            Option V:<br />\n                            GEOL 105 - Geological Hazards and Their Human Impact <br />\n                            GEOL 107 - Geology of Dynamic Earth <br />\n                            GEOL 115 - Geological Hazards Laboratory <br />\n                            <br />\n                            Additional Requirements:<br />\n                            A course chosen from CISC 304 or MATH 349, or a 300-level or above math course<br />\n                            ENGL 312 - Written Communications in Business<br />\n                            ENGL 410 - Technical Writing<br />\n                            CISC 355 - Computers, Ethics and Society<br />\n                            After required courses are completed, sufficient elective credits must be taken to meet the minimum credit requirement for the degree.\n                        </Col>\n                    </Row>\n                </Container>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n            </Modal.Footer>\n        </Modal></>\n    );\n}","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { SemesterTab } from \"./components/SemesterTab\";\nimport { CourseList } from \"./components/CourseList\";\nimport {WelcomeModal} from \"./components/WelcomeModal\";\nimport CourseData from \"./data/courses.json\";\nimport { Semester } from \"./interfaces/Semester\";\nimport { Course } from \"./interfaces/Course\";\nimport { DegreeRequirementsModal } from \"./components/DegreeRequirements\";\n\n\n\nconst courseArray = JSON.parse(JSON.stringify(CourseData));\n\nfunction App(): JSX.Element {\n    \n\n    const semester1 = {} as Semester;\n    semester1.Title = \"Fall 2022\";\n    semester1.Courses = [courseArray[0] as Course, courseArray[1] as Course, courseArray[49] as Course, courseArray[48] as Course, courseArray[56] as Course];\n\n    const semester2 = {} as Semester;\n    semester2.Title = \"Spring 2023\";\n    semester2.Courses = [courseArray[2] as Course, courseArray[3] as Course, courseArray[51] as Course, courseArray[56] as Course, courseArray[57] as Course];\n\n    const semester3 = {} as Semester;\n    semester3.Title = \"Fall 2023\";\n    semester3.Courses = [courseArray[4] as Course, courseArray[5] as Course, courseArray[50] as Course, courseArray[58] as Course, courseArray[59] as Course];\n\n    const semester4 = {} as Semester;\n    semester4.Title = \"Spring 2024\";\n    semester4.Courses = [courseArray[9] as Course, courseArray[8] as Course, courseArray[52] as Course, courseArray[58] as Course, courseArray[56] as Course];\n   \n    const semester5 = {} as Semester;\n    semester5.Title = \"Fall 2024\";\n    semester5.Courses = [courseArray[60] as Course, courseArray[7] as Course, courseArray[13] as Course, courseArray[62] as Course, courseArray[59] as Course];\n\n    const semester6 = {} as Semester;\n    semester6.Title = \"Spring 2025\";\n    semester6.Courses = [courseArray[6] as Course, courseArray[15] as Course, courseArray[61] as Course, courseArray[62] as Course, courseArray[59] as Course];\n\n    const semester7 = {} as Semester;\n    semester7.Title = \"Fall 2025\";\n    semester7.Courses = [courseArray[46] as Course, courseArray[63] as Course, courseArray[64] as Course, courseArray[59] as Course, courseArray[59] as Course];\n\n    const semester8 = {} as Semester;\n    semester8.Title = \"Spring 2026\";\n    semester8.Courses = [courseArray[47] as Course, courseArray[65] as Course, courseArray[64] as Course, courseArray[59] as Course, courseArray[59] as Course];\n    return (\n        <div className=\"App\">\n\n            <h1>UD CIS Scheduler</h1>\n            <WelcomeModal></WelcomeModal>\n            <DegreeRequirementsModal></DegreeRequirementsModal>\n            <SemesterTab semester1={semester1} semester2={semester2} semester3={semester3} semester4 = {semester4} semester5 = {semester5} semester6 = {semester6} semester7 = {semester7} semester8 = {semester8} ></SemesterTab>\n            <div>\n                <h2>Course List</h2>\n                <CourseList></CourseList>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}